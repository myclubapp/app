import {
  isRTL
} from "./chunk-V6KMHBLJ.js";
import {
  checkmarkOutline,
  ellipseOutline,
  removeOutline
} from "./chunk-Y2OY2WAF.js";
import {
  hapticSelection
} from "./chunk-3XAIP4YB.js";
import "./chunk-UPH3BB7G.js";
import {
  createColorClasses,
  hostContext
} from "./chunk-QQMTNXUN.js";
import {
  inheritAriaAttributes,
  renderHiddenInput
} from "./chunk-RRWPYKYY.js";
import "./chunk-JYOJD2RE.js";
import {
  config,
  getIonMode
} from "./chunk-5IJ3YEPD.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  registerInstance
} from "./chunk-T7BCX42A.js";
import {
  __async
} from "./chunk-LQ2EECYJ.js";

// node_modules/@ionic/core/dist/esm/ion-toggle.entry.js
var toggleIosCss = ":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;position:relative;max-width:100%;outline:none;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.toggle-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.toggle-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.toggle-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.toggle-bottom{padding-top:4px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:0.75rem;white-space:normal}:host(.toggle-label-placement-stacked) .toggle-bottom{font-size:1rem}.toggle-bottom .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.toggle-bottom .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}:host(.ion-touched.ion-invalid) .toggle-bottom .error-text{display:block}:host(.ion-touched.ion-invalid) .toggle-bottom .helper-text{display:none}:host(.toggle-label-placement-start) .toggle-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.toggle-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.toggle-label-placement-end) .toggle-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:start;justify-content:start}:host(.toggle-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.toggle-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.toggle-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.toggle-label-placement-stacked) .toggle-wrapper{-ms-flex-direction:column;flex-direction:column;text-align:center}:host(.toggle-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.toggle-label-placement-stacked.toggle-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.toggle-label-placement-stacked.toggle-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.toggle-justify-space-between) .toggle-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.toggle-justify-start) .toggle-wrapper{-ms-flex-pack:start;justify-content:start}:host(.toggle-justify-end) .toggle-wrapper{-ms-flex-pack:end;justify-content:end}:host(.toggle-alignment-start) .toggle-wrapper{-ms-flex-align:start;align-items:start}:host(.toggle-alignment-center) .toggle-wrapper{-ms-flex-align:center;align-items:center}:host(.toggle-justify-space-between),:host(.toggle-justify-start),:host(.toggle-justify-end),:host(.toggle-alignment-start),:host(.toggle-alignment-center){display:block}.toggle-icon-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;-webkit-transition:var(--handle-transition);transition:var(--handle-transition);will-change:transform}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;background:var(--track-background);overflow:inherit}:host(.toggle-checked) .toggle-icon{background:var(--track-background-checked)}.toggle-inner{border-radius:var(--handle-border-radius);position:absolute;left:var(--handle-spacing);width:var(--handle-width);height:var(--handle-height);max-height:var(--handle-max-height);-webkit-transition:var(--handle-transition);transition:var(--handle-transition);background:var(--handle-background);-webkit-box-shadow:var(--handle-box-shadow);box-shadow:var(--handle-box-shadow);contain:strict}:host(.toggle-ltr) .toggle-inner{left:var(--handle-spacing)}:host(.toggle-rtl) .toggle-inner{right:var(--handle-spacing)}:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width)), 0, 0);transform:translate3d(calc(100% - var(--handle-width)), 0, 0)}:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width)), 0, 0);transform:translate3d(calc(-100% + var(--handle-width)), 0, 0)}:host(.toggle-checked) .toggle-inner{background:var(--handle-background-checked)}:host(.toggle-ltr.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0)}:host(.toggle-rtl.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0)}:host{--track-background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.088);--track-background-checked:var(--ion-color-primary, #0054e9);--border-radius:15.5px;--handle-background:#ffffff;--handle-background-checked:#ffffff;--handle-border-radius:25.5px;--handle-box-shadow:0 3px 4px rgba(0, 0, 0, 0.06), 0 3px 8px rgba(0, 0, 0, 0.06);--handle-height:calc(31px - (2px * 2));--handle-max-height:calc(100% - var(--handle-spacing) * 2);--handle-width:calc(31px - (2px * 2));--handle-spacing:2px;--handle-transition:transform 300ms, width 120ms ease-in-out 80ms, left 110ms ease-in-out 80ms, right 110ms ease-in-out 80ms}.native-wrapper .toggle-icon{width:51px;height:31px;overflow:hidden}:host(.ion-color.toggle-checked) .toggle-icon{background:var(--ion-color-base)}:host(.toggle-activated) .toggle-switch-icon{opacity:0}.toggle-icon{-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:background-color 300ms;transition:background-color 300ms}.toggle-inner{will-change:transform}.toggle-switch-icon{position:absolute;top:50%;width:11px;height:11px;-webkit-transform:translateY(-50%);transform:translateY(-50%);-webkit-transition:opacity 300ms, color 300ms;transition:opacity 300ms, color 300ms}.toggle-switch-icon{position:absolute;color:var(--ion-color-dark, #222428)}:host(.toggle-ltr) .toggle-switch-icon{right:6px}:host(.toggle-rtl) .toggle-switch-icon{right:initial;left:6px;}:host(.toggle-checked) .toggle-switch-icon.toggle-switch-icon-checked{color:var(--ion-color-contrast, #fff)}:host(.toggle-checked) .toggle-switch-icon:not(.toggle-switch-icon-checked){opacity:0}.toggle-switch-icon-checked{position:absolute;width:15px;height:15px;-webkit-transform:translateY(-50%) rotate(90deg);transform:translateY(-50%) rotate(90deg)}:host(.toggle-ltr) .toggle-switch-icon-checked{right:initial;left:4px;}:host(.toggle-rtl) .toggle-switch-icon-checked{right:4px}:host(.toggle-activated) .toggle-icon::before,:host(.toggle-checked) .toggle-icon::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-activated.toggle-checked) .toggle-inner::before{-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0)}:host(.toggle-activated) .toggle-inner{width:calc(var(--handle-width) + 6px)}:host(.toggle-ltr.toggle-activated.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width) - 6px), 0, 0);transform:translate3d(calc(100% - var(--handle-width) - 6px), 0, 0)}:host(.toggle-rtl.toggle-activated.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0);transform:translate3d(calc(-100% + var(--handle-width) + 6px), 0, 0)}:host(.toggle-disabled){opacity:0.3}";
var IonToggleIosStyle0 = toggleIosCss;
var toggleMdCss = ":host{-webkit-box-sizing:content-box !important;box-sizing:content-box !important;display:inline-block;position:relative;max-width:100%;outline:none;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.toggle-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.toggle-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.toggle-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.toggle-bottom{padding-top:4px;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;font-size:0.75rem;white-space:normal}:host(.toggle-label-placement-stacked) .toggle-bottom{font-size:1rem}.toggle-bottom .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.toggle-bottom .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}:host(.ion-touched.ion-invalid) .toggle-bottom .error-text{display:block}:host(.ion-touched.ion-invalid) .toggle-bottom .helper-text{display:none}:host(.toggle-label-placement-start) .toggle-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.toggle-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.toggle-label-placement-end) .toggle-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse;-ms-flex-pack:start;justify-content:start}:host(.toggle-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.toggle-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.toggle-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.toggle-label-placement-stacked) .toggle-wrapper{-ms-flex-direction:column;flex-direction:column;text-align:center}:host(.toggle-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.toggle-label-placement-stacked.toggle-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.toggle-label-placement-stacked.toggle-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).toggle-label-placement-stacked.toggle-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.toggle-label-placement-stacked.toggle-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.toggle-justify-space-between) .toggle-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.toggle-justify-start) .toggle-wrapper{-ms-flex-pack:start;justify-content:start}:host(.toggle-justify-end) .toggle-wrapper{-ms-flex-pack:end;justify-content:end}:host(.toggle-alignment-start) .toggle-wrapper{-ms-flex-align:start;align-items:start}:host(.toggle-alignment-center) .toggle-wrapper{-ms-flex-align:center;align-items:center}:host(.toggle-justify-space-between),:host(.toggle-justify-start),:host(.toggle-justify-end),:host(.toggle-alignment-start),:host(.toggle-alignment-center){display:block}.toggle-icon-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;width:100%;height:100%;-webkit-transition:var(--handle-transition);transition:var(--handle-transition);will-change:transform}.toggle-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;background:var(--track-background);overflow:inherit}:host(.toggle-checked) .toggle-icon{background:var(--track-background-checked)}.toggle-inner{border-radius:var(--handle-border-radius);position:absolute;left:var(--handle-spacing);width:var(--handle-width);height:var(--handle-height);max-height:var(--handle-max-height);-webkit-transition:var(--handle-transition);transition:var(--handle-transition);background:var(--handle-background);-webkit-box-shadow:var(--handle-box-shadow);box-shadow:var(--handle-box-shadow);contain:strict}:host(.toggle-ltr) .toggle-inner{left:var(--handle-spacing)}:host(.toggle-rtl) .toggle-inner{right:var(--handle-spacing)}:host(.toggle-ltr.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(100% - var(--handle-width)), 0, 0);transform:translate3d(calc(100% - var(--handle-width)), 0, 0)}:host(.toggle-rtl.toggle-checked) .toggle-icon-wrapper{-webkit-transform:translate3d(calc(-100% + var(--handle-width)), 0, 0);transform:translate3d(calc(-100% + var(--handle-width)), 0, 0)}:host(.toggle-checked) .toggle-inner{background:var(--handle-background-checked)}:host(.toggle-ltr.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * -2), 0, 0)}:host(.toggle-rtl.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0);transform:translate3d(calc(var(--handle-spacing) * 2), 0, 0)}:host{--track-background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.39);--track-background-checked:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.5);--border-radius:14px;--handle-background:#ffffff;--handle-background-checked:var(--ion-color-primary, #0054e9);--handle-border-radius:50%;--handle-box-shadow:0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);--handle-width:20px;--handle-height:20px;--handle-max-height:calc(100% + 6px);--handle-spacing:0;--handle-transition:transform 160ms cubic-bezier(0.4, 0, 0.2, 1), background-color 160ms cubic-bezier(0.4, 0, 0.2, 1)}.native-wrapper .toggle-icon{width:36px;height:14px}:host(.ion-color.toggle-checked) .toggle-icon{background:rgba(var(--ion-color-base-rgb), 0.5)}:host(.ion-color.toggle-checked) .toggle-inner{background:var(--ion-color-base)}:host(.toggle-checked) .toggle-inner{color:var(--ion-color-contrast, #fff)}.toggle-icon{-webkit-transition:background-color 160ms;transition:background-color 160ms}.toggle-inner{will-change:background-color, transform;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:#000}.toggle-inner .toggle-switch-icon{-webkit-padding-start:1px;padding-inline-start:1px;-webkit-padding-end:1px;padding-inline-end:1px;padding-top:1px;padding-bottom:1px;width:100%;height:100%}:host(.toggle-disabled){opacity:0.38}";
var IonToggleMdStyle0 = toggleMdCss;
var Toggle = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.ionChange = createEvent(this, "ionChange", 7);
    this.ionFocus = createEvent(this, "ionFocus", 7);
    this.ionBlur = createEvent(this, "ionBlur", 7);
    this.inputId = `ion-tg-${toggleIds++}`;
    this.helperTextId = `${this.inputId}-helper-text`;
    this.errorTextId = `${this.inputId}-error-text`;
    this.lastDrag = 0;
    this.inheritedAttributes = {};
    this.didLoad = false;
    this.setupGesture = () => __async(this, null, function* () {
      const {
        toggleTrack
      } = this;
      if (toggleTrack) {
        this.gesture = (yield import("./index-39782642-6UBMS4CD.js")).createGesture({
          el: toggleTrack,
          gestureName: "toggle",
          gesturePriority: 100,
          threshold: 5,
          passive: false,
          onStart: () => this.onStart(),
          onMove: (ev) => this.onMove(ev),
          onEnd: (ev) => this.onEnd(ev)
        });
        this.disabledChanged();
      }
    });
    this.onClick = (ev) => {
      if (this.disabled) {
        return;
      }
      ev.preventDefault();
      if (this.lastDrag + 300 < Date.now()) {
        this.toggleChecked();
      }
    };
    this.onFocus = () => {
      this.ionFocus.emit();
    };
    this.onBlur = () => {
      this.ionBlur.emit();
    };
    this.getSwitchLabelIcon = (mode, checked) => {
      if (mode === "md") {
        return checked ? checkmarkOutline : removeOutline;
      }
      return checked ? removeOutline : ellipseOutline;
    };
    this.activated = false;
    this.color = void 0;
    this.name = this.inputId;
    this.checked = false;
    this.disabled = false;
    this.errorText = void 0;
    this.helperText = void 0;
    this.value = "on";
    this.enableOnOffLabels = config.get("toggleOnOffLabels");
    this.labelPlacement = "start";
    this.justify = void 0;
    this.alignment = void 0;
    this.required = false;
  }
  disabledChanged() {
    if (this.gesture) {
      this.gesture.enable(!this.disabled);
    }
  }
  toggleChecked() {
    const {
      checked,
      value
    } = this;
    const isNowChecked = !checked;
    this.checked = isNowChecked;
    this.setFocus();
    this.ionChange.emit({
      checked: isNowChecked,
      value
    });
  }
  connectedCallback() {
    return __async(this, null, function* () {
      if (this.didLoad) {
        this.setupGesture();
      }
    });
  }
  componentDidLoad() {
    this.setupGesture();
    this.didLoad = true;
  }
  disconnectedCallback() {
    if (this.gesture) {
      this.gesture.destroy();
      this.gesture = void 0;
    }
  }
  componentWillLoad() {
    this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));
  }
  onStart() {
    this.activated = true;
    this.setFocus();
  }
  onMove(detail) {
    if (shouldToggle(isRTL(this.el), this.checked, detail.deltaX, -10)) {
      this.toggleChecked();
      hapticSelection();
    }
  }
  onEnd(ev) {
    this.activated = false;
    this.lastDrag = Date.now();
    ev.event.preventDefault();
    ev.event.stopImmediatePropagation();
  }
  getValue() {
    return this.value || "";
  }
  setFocus() {
    if (this.focusEl) {
      this.focusEl.focus();
    }
  }
  renderOnOffSwitchLabels(mode, checked) {
    const icon = this.getSwitchLabelIcon(mode, checked);
    return h("ion-icon", {
      class: {
        "toggle-switch-icon": true,
        "toggle-switch-icon-checked": checked
      },
      icon,
      "aria-hidden": "true"
    });
  }
  renderToggleControl() {
    const mode = getIonMode(this);
    const {
      enableOnOffLabels,
      checked
    } = this;
    return h("div", {
      class: "toggle-icon",
      part: "track",
      ref: (el) => this.toggleTrack = el
    }, enableOnOffLabels && mode === "ios" && [this.renderOnOffSwitchLabels(mode, true), this.renderOnOffSwitchLabels(mode, false)], h("div", {
      class: "toggle-icon-wrapper"
    }, h("div", {
      class: "toggle-inner",
      part: "handle"
    }, enableOnOffLabels && mode === "md" && this.renderOnOffSwitchLabels(mode, checked))));
  }
  get hasLabel() {
    return this.el.textContent !== "";
  }
  getHintTextID() {
    const {
      el,
      helperText,
      errorText,
      helperTextId,
      errorTextId
    } = this;
    if (el.classList.contains("ion-touched") && el.classList.contains("ion-invalid") && errorText) {
      return errorTextId;
    }
    if (helperText) {
      return helperTextId;
    }
    return void 0;
  }
  /**
   * Responsible for rendering helper text and error text.
   * This element should only be rendered if hint text is set.
   */
  renderHintText() {
    const {
      helperText,
      errorText,
      helperTextId,
      errorTextId
    } = this;
    const hasHintText = !!helperText || !!errorText;
    if (!hasHintText) {
      return;
    }
    return h("div", {
      class: "toggle-bottom"
    }, h("div", {
      id: helperTextId,
      class: "helper-text",
      part: "supporting-text helper-text"
    }, helperText), h("div", {
      id: errorTextId,
      class: "error-text",
      part: "supporting-text error-text"
    }, errorText));
  }
  render() {
    const {
      activated,
      color,
      checked,
      disabled,
      el,
      justify,
      labelPlacement,
      inputId,
      name,
      alignment,
      required
    } = this;
    const mode = getIonMode(this);
    const value = this.getValue();
    const rtl = isRTL(el) ? "rtl" : "ltr";
    renderHiddenInput(true, el, name, checked ? value : "", disabled);
    return h(Host, {
      key: "c6db7f5bc0b358944c0d79e24aeb4d319793422f",
      "aria-describedby": this.getHintTextID(),
      "aria-invalid": this.getHintTextID() === this.errorTextId,
      onClick: this.onClick,
      class: createColorClasses(color, {
        [mode]: true,
        "in-item": hostContext("ion-item", el),
        "toggle-activated": activated,
        "toggle-checked": checked,
        "toggle-disabled": disabled,
        [`toggle-justify-${justify}`]: justify !== void 0,
        [`toggle-alignment-${alignment}`]: alignment !== void 0,
        [`toggle-label-placement-${labelPlacement}`]: true,
        [`toggle-${rtl}`]: true
      })
    }, h("label", {
      key: "f49531391f4513d084061c27ebc4c4eb1dcd02ab",
      class: "toggle-wrapper"
    }, h("input", Object.assign({
      key: "f4ab2dc29eae053f54613d1304f755e151037f47",
      type: "checkbox",
      role: "switch",
      "aria-checked": `${checked}`,
      checked,
      disabled,
      id: inputId,
      onFocus: () => this.onFocus(),
      onBlur: () => this.onBlur(),
      ref: (focusEl) => this.focusEl = focusEl,
      required
    }, this.inheritedAttributes)), h("div", {
      key: "85674bfab5ec1e422c787d025c4f9f5b3aadd4f2",
      class: {
        "label-text-wrapper": true,
        "label-text-wrapper-hidden": !this.hasLabel
      },
      part: "label"
    }, h("slot", {
      key: "9bdf7e85c95dc7373f18894ebfe6ad022f098107"
    }), this.renderHintText()), h("div", {
      key: "33883642b38421a82001e37db3dd5e5c643785b0",
      class: "native-wrapper"
    }, this.renderToggleControl())));
  }
  get el() {
    return getElement(this);
  }
  static get watchers() {
    return {
      "disabled": ["disabledChanged"]
    };
  }
};
var shouldToggle = (rtl, checked, deltaX, margin) => {
  if (checked) {
    return !rtl && margin > deltaX || rtl && -margin < deltaX;
  } else {
    return !rtl && -margin < deltaX || rtl && margin > deltaX;
  }
};
var toggleIds = 0;
Toggle.style = {
  ios: IonToggleIosStyle0,
  md: IonToggleMdStyle0
};
export {
  Toggle as ion_toggle
};
/*! Bundled license information:

@ionic/core/dist/esm/ion-toggle.entry.js:
  (*!
   * (C) Ionic http://ionicframework.com - MIT License
   *)
*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS9pb24tdG9nZ2xlLmVudHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGMgYXMgY3JlYXRlRXZlbnQsIGgsIGUgYXMgSG9zdCwgZiBhcyBnZXRFbGVtZW50IH0gZnJvbSAnLi9pbmRleC01MjdiOWUzNC5qcyc7XG5pbXBvcnQgeyBpIGFzIGluaGVyaXRBcmlhQXR0cmlidXRlcywgZCBhcyByZW5kZXJIaWRkZW5JbnB1dCB9IGZyb20gJy4vaGVscGVycy03OGVmZWVjMy5qcyc7XG5pbXBvcnQgeyBjIGFzIGhhcHRpY1NlbGVjdGlvbiB9IGZyb20gJy4vaGFwdGljLWFjMTY0ZTRjLmpzJztcbmltcG9ydCB7IGkgYXMgaXNSVEwgfSBmcm9tICcuL2Rpci1iYWJlYWJlYi5qcyc7XG5pbXBvcnQgeyBjIGFzIGNyZWF0ZUNvbG9yQ2xhc3NlcywgaCBhcyBob3N0Q29udGV4dCB9IGZyb20gJy4vdGhlbWUtMDFmM2YyOWMuanMnO1xuaW1wb3J0IHsgZiBhcyBjaGVja21hcmtPdXRsaW5lLCByIGFzIHJlbW92ZU91dGxpbmUsIGcgYXMgZWxsaXBzZU91dGxpbmUgfSBmcm9tICcuL2luZGV4LWUyY2YyY2ViLmpzJztcbmltcG9ydCB7IGMgYXMgY29uZmlnLCBiIGFzIGdldElvbk1vZGUgfSBmcm9tICcuL2lvbmljLWdsb2JhbC1jYTg2Y2YzMi5qcyc7XG5pbXBvcnQgJy4vY2FwYWNpdG9yLTU5Mzk1Y2JkLmpzJztcbmltcG9ydCAnLi9pbmRleC1hNWQ1MGRhZi5qcyc7XG5jb25zdCB0b2dnbGVJb3NDc3MgPSBcIjpob3N0ey13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveCAhaW1wb3J0YW50O2JveC1zaXppbmc6Y29udGVudC1ib3ggIWltcG9ydGFudDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTttYXgtd2lkdGg6MTAwJTtvdXRsaW5lOm5vbmU7Y3Vyc29yOnBvaW50ZXI7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3otaW5kZXg6Mn06aG9zdCguaW4taXRlbSl7LW1zLWZsZXg6MSAxIDBweDtmbGV4OjEgMSAwO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9Omhvc3QoW3Nsb3Q9c3RhcnRdKSw6aG9zdChbc2xvdD1lbmRdKXstbXMtZmxleDppbml0aWFsO2ZsZXg6aW5pdGlhbDt3aWR0aDphdXRvfTpob3N0KC5pb24tZm9jdXNlZCkgaW5wdXR7Ym9yZGVyOjJweCBzb2xpZCAjNWU5ZWQ2fTpob3N0KC50b2dnbGUtZGlzYWJsZWQpe3BvaW50ZXItZXZlbnRzOm5vbmV9aW5wdXR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTttYXJnaW46MDtwYWRkaW5nOjA7Ym9yZGVyOjA7b3V0bGluZTowO2NsaXA6cmVjdCgwIDAgMCAwKTtvcGFjaXR5OjA7b3ZlcmZsb3c6aGlkZGVuOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lfS50b2dnbGUtd3JhcHBlcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1wb3NpdGl2ZToxO2ZsZXgtZ3JvdzoxOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2hlaWdodDppbmhlcml0Oy13ZWJraXQtdHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDE1bXMgbGluZWFyO3RyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAxNW1zIGxpbmVhcjtjdXJzb3I6aW5oZXJpdH0ubGFiZWwtdGV4dC13cmFwcGVye3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93OmhpZGRlbn06aG9zdCguaW4taXRlbSkgLmxhYmVsLXRleHQtd3JhcHBlcnttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWJvdHRvbToxMHB4fTpob3N0KC5pbi1pdGVtLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZCkgLmxhYmVsLXRleHQtd3JhcHBlcnttYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWJvdHRvbToxNnB4fTpob3N0KC5pbi1pdGVtLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZCkgLm5hdGl2ZS13cmFwcGVye21hcmdpbi1ib3R0b206MTBweH0ubGFiZWwtdGV4dC13cmFwcGVyLWhpZGRlbntkaXNwbGF5Om5vbmV9Lm5hdGl2ZS13cmFwcGVye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LnRvZ2dsZS1ib3R0b217cGFkZGluZy10b3A6NHB4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjtmb250LXNpemU6MC43NXJlbTt3aGl0ZS1zcGFjZTpub3JtYWx9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZCkgLnRvZ2dsZS1ib3R0b217Zm9udC1zaXplOjFyZW19LnRvZ2dsZS1ib3R0b20gLmVycm9yLXRleHR7ZGlzcGxheTpub25lO2NvbG9yOnZhcigtLWlvbi1jb2xvci1kYW5nZXIsICNjNTAwMGYpfS50b2dnbGUtYm90dG9tIC5oZWxwZXItdGV4dHtkaXNwbGF5OmJsb2NrO2NvbG9yOnZhcigtLWlvbi1jb2xvci1zdGVwLTcwMCwgdmFyKC0taW9uLXRleHQtY29sb3Itc3RlcC0zMDAsICM0ZDRkNGQpKX06aG9zdCguaW9uLXRvdWNoZWQuaW9uLWludmFsaWQpIC50b2dnbGUtYm90dG9tIC5lcnJvci10ZXh0e2Rpc3BsYXk6YmxvY2t9Omhvc3QoLmlvbi10b3VjaGVkLmlvbi1pbnZhbGlkKSAudG9nZ2xlLWJvdHRvbSAuaGVscGVyLXRleHR7ZGlzcGxheTpub25lfTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YXJ0KSAudG9nZ2xlLXdyYXBwZXJ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhcnQpIC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MDttYXJnaW4taW5saW5lLXN0YXJ0OjA7LXdlYmtpdC1tYXJnaW4tZW5kOjE2cHg7bWFyZ2luLWlubGluZS1lbmQ6MTZweH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1lbmQpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2U7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2U7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6c3RhcnR9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtZW5kKSAubGFiZWwtdGV4dC13cmFwcGVyey13ZWJraXQtbWFyZ2luLXN0YXJ0OjE2cHg7bWFyZ2luLWlubGluZS1zdGFydDoxNnB4Oy13ZWJraXQtbWFyZ2luLWVuZDowO21hcmdpbi1pbmxpbmUtZW5kOjB9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtZml4ZWQpIC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MDttYXJnaW4taW5saW5lLXN0YXJ0OjA7LXdlYmtpdC1tYXJnaW4tZW5kOjE2cHg7bWFyZ2luLWlubGluZS1lbmQ6MTZweH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1maXhlZCkgLmxhYmVsLXRleHQtd3JhcHBlcnstbXMtZmxleDowIDAgMTAwcHg7ZmxleDowIDAgMTAwcHg7d2lkdGg6MTAwcHg7bWluLXdpZHRoOjEwMHB4O21heC13aWR0aDoyMDBweH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkKSAudG9nZ2xlLXdyYXBwZXJ7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47dGV4dC1hbGlnbjpjZW50ZXJ9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZCkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgwLjc1KTt0cmFuc2Zvcm06c2NhbGUoMC43NSk7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDttYXJnaW4tYm90dG9tOjE2cHg7bWF4LXdpZHRoOmNhbGMoMTAwJSAvIDAuNzUpfTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQudG9nZ2xlLWFsaWdubWVudC1zdGFydCkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46bGVmdCB0b3A7dHJhbnNmb3JtLW9yaWdpbjpsZWZ0IHRvcH06aG9zdC1jb250ZXh0KFtkaXI9cnRsXSk6aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtc3RhcnQpIC5sYWJlbC10ZXh0LXdyYXBwZXIsOmhvc3QtY29udGV4dChbZGlyPXJ0bF0pLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC50b2dnbGUtYWxpZ25tZW50LXN0YXJ0IC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcH1Ac3VwcG9ydHMgc2VsZWN0b3IoOmRpcihydGwpKXs6aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtc3RhcnQ6ZGlyKHJ0bCkpIC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcH19Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC50b2dnbGUtYWxpZ25tZW50LWNlbnRlcikgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46Y2VudGVyIHRvcDt0cmFuc2Zvcm0tb3JpZ2luOmNlbnRlciB0b3B9Omhvc3QtY29udGV4dChbZGlyPXJ0bF0pOmhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC50b2dnbGUtYWxpZ25tZW50LWNlbnRlcikgLmxhYmVsLXRleHQtd3JhcHBlciw6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtY2VudGVyIC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOmNhbGMoMTAwJSAtIGNlbnRlcikgdG9wO3RyYW5zZm9ybS1vcmlnaW46Y2FsYygxMDAlIC0gY2VudGVyKSB0b3B9QHN1cHBvcnRzIHNlbGVjdG9yKDpkaXIocnRsKSl7Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC50b2dnbGUtYWxpZ25tZW50LWNlbnRlcjpkaXIocnRsKSkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46Y2FsYygxMDAlIC0gY2VudGVyKSB0b3A7dHJhbnNmb3JtLW9yaWdpbjpjYWxjKDEwMCUgLSBjZW50ZXIpIHRvcH19Omhvc3QoLnRvZ2dsZS1qdXN0aWZ5LXNwYWNlLWJldHdlZW4pIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59Omhvc3QoLnRvZ2dsZS1qdXN0aWZ5LXN0YXJ0KSAudG9nZ2xlLXdyYXBwZXJ7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6c3RhcnR9Omhvc3QoLnRvZ2dsZS1qdXN0aWZ5LWVuZCkgLnRvZ2dsZS13cmFwcGVyey1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDplbmR9Omhvc3QoLnRvZ2dsZS1hbGlnbm1lbnQtc3RhcnQpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpzdGFydH06aG9zdCgudG9nZ2xlLWFsaWdubWVudC1jZW50ZXIpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfTpob3N0KC50b2dnbGUtanVzdGlmeS1zcGFjZS1iZXR3ZWVuKSw6aG9zdCgudG9nZ2xlLWp1c3RpZnktc3RhcnQpLDpob3N0KC50b2dnbGUtanVzdGlmeS1lbmQpLDpob3N0KC50b2dnbGUtYWxpZ25tZW50LXN0YXJ0KSw6aG9zdCgudG9nZ2xlLWFsaWdubWVudC1jZW50ZXIpe2Rpc3BsYXk6YmxvY2t9LnRvZ2dsZS1pY29uLXdyYXBwZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmU7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOy13ZWJraXQtdHJhbnNpdGlvbjp2YXIoLS1oYW5kbGUtdHJhbnNpdGlvbik7dHJhbnNpdGlvbjp2YXIoLS1oYW5kbGUtdHJhbnNpdGlvbik7d2lsbC1jaGFuZ2U6dHJhbnNmb3JtfS50b2dnbGUtaWNvbntib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kOnZhcigtLXRyYWNrLWJhY2tncm91bmQpO292ZXJmbG93OmluaGVyaXR9Omhvc3QoLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWljb257YmFja2dyb3VuZDp2YXIoLS10cmFjay1iYWNrZ3JvdW5kLWNoZWNrZWQpfS50b2dnbGUtaW5uZXJ7Ym9yZGVyLXJhZGl1czp2YXIoLS1oYW5kbGUtYm9yZGVyLXJhZGl1cyk7cG9zaXRpb246YWJzb2x1dGU7bGVmdDp2YXIoLS1oYW5kbGUtc3BhY2luZyk7d2lkdGg6dmFyKC0taGFuZGxlLXdpZHRoKTtoZWlnaHQ6dmFyKC0taGFuZGxlLWhlaWdodCk7bWF4LWhlaWdodDp2YXIoLS1oYW5kbGUtbWF4LWhlaWdodCk7LXdlYmtpdC10cmFuc2l0aW9uOnZhcigtLWhhbmRsZS10cmFuc2l0aW9uKTt0cmFuc2l0aW9uOnZhcigtLWhhbmRsZS10cmFuc2l0aW9uKTtiYWNrZ3JvdW5kOnZhcigtLWhhbmRsZS1iYWNrZ3JvdW5kKTstd2Via2l0LWJveC1zaGFkb3c6dmFyKC0taGFuZGxlLWJveC1zaGFkb3cpO2JveC1zaGFkb3c6dmFyKC0taGFuZGxlLWJveC1zaGFkb3cpO2NvbnRhaW46c3RyaWN0fTpob3N0KC50b2dnbGUtbHRyKSAudG9nZ2xlLWlubmVye2xlZnQ6dmFyKC0taGFuZGxlLXNwYWNpbmcpfTpob3N0KC50b2dnbGUtcnRsKSAudG9nZ2xlLWlubmVye3JpZ2h0OnZhcigtLWhhbmRsZS1zcGFjaW5nKX06aG9zdCgudG9nZ2xlLWx0ci50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1pY29uLXdyYXBwZXJ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYygxMDAlIC0gdmFyKC0taGFuZGxlLXdpZHRoKSksIDAsIDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZChjYWxjKDEwMCUgLSB2YXIoLS1oYW5kbGUtd2lkdGgpKSwgMCwgMCl9Omhvc3QoLnRvZ2dsZS1ydGwudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaWNvbi13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoLTEwMCUgKyB2YXIoLS1oYW5kbGUtd2lkdGgpKSwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoLTEwMCUgKyB2YXIoLS1oYW5kbGUtd2lkdGgpKSwgMCwgMCl9Omhvc3QoLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWlubmVye2JhY2tncm91bmQ6dmFyKC0taGFuZGxlLWJhY2tncm91bmQtY2hlY2tlZCl9Omhvc3QoLnRvZ2dsZS1sdHIudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaW5uZXJ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYyh2YXIoLS1oYW5kbGUtc3BhY2luZykgKiAtMiksIDAsIDApO3RyYW5zZm9ybTp0cmFuc2xhdGUzZChjYWxjKHZhcigtLWhhbmRsZS1zcGFjaW5nKSAqIC0yKSwgMCwgMCl9Omhvc3QoLnRvZ2dsZS1ydGwudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaW5uZXJ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYyh2YXIoLS1oYW5kbGUtc3BhY2luZykgKiAyKSwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGModmFyKC0taGFuZGxlLXNwYWNpbmcpICogMiksIDAsIDApfTpob3N0ey0tdHJhY2stYmFja2dyb3VuZDpyZ2JhKHZhcigtLWlvbi10ZXh0LWNvbG9yLXJnYiwgMCwgMCwgMCksIDAuMDg4KTstLXRyYWNrLWJhY2tncm91bmQtY2hlY2tlZDp2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzAwNTRlOSk7LS1ib3JkZXItcmFkaXVzOjE1LjVweDstLWhhbmRsZS1iYWNrZ3JvdW5kOiNmZmZmZmY7LS1oYW5kbGUtYmFja2dyb3VuZC1jaGVja2VkOiNmZmZmZmY7LS1oYW5kbGUtYm9yZGVyLXJhZGl1czoyNS41cHg7LS1oYW5kbGUtYm94LXNoYWRvdzowIDNweCA0cHggcmdiYSgwLCAwLCAwLCAwLjA2KSwgMCAzcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4wNik7LS1oYW5kbGUtaGVpZ2h0OmNhbGMoMzFweCAtICgycHggKiAyKSk7LS1oYW5kbGUtbWF4LWhlaWdodDpjYWxjKDEwMCUgLSB2YXIoLS1oYW5kbGUtc3BhY2luZykgKiAyKTstLWhhbmRsZS13aWR0aDpjYWxjKDMxcHggLSAoMnB4ICogMikpOy0taGFuZGxlLXNwYWNpbmc6MnB4Oy0taGFuZGxlLXRyYW5zaXRpb246dHJhbnNmb3JtIDMwMG1zLCB3aWR0aCAxMjBtcyBlYXNlLWluLW91dCA4MG1zLCBsZWZ0IDExMG1zIGVhc2UtaW4tb3V0IDgwbXMsIHJpZ2h0IDExMG1zIGVhc2UtaW4tb3V0IDgwbXN9Lm5hdGl2ZS13cmFwcGVyIC50b2dnbGUtaWNvbnt3aWR0aDo1MXB4O2hlaWdodDozMXB4O292ZXJmbG93OmhpZGRlbn06aG9zdCguaW9uLWNvbG9yLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWljb257YmFja2dyb3VuZDp2YXIoLS1pb24tY29sb3ItYmFzZSl9Omhvc3QoLnRvZ2dsZS1hY3RpdmF0ZWQpIC50b2dnbGUtc3dpdGNoLWljb257b3BhY2l0eTowfS50b2dnbGUtaWNvbnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAwLCAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgMCwgMCk7LXdlYmtpdC10cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMzAwbXM7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zfS50b2dnbGUtaW5uZXJ7d2lsbC1jaGFuZ2U6dHJhbnNmb3JtfS50b2dnbGUtc3dpdGNoLWljb257cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt3aWR0aDoxMXB4O2hlaWdodDoxMXB4Oy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7LXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgMzAwbXMsIGNvbG9yIDMwMG1zO3RyYW5zaXRpb246b3BhY2l0eSAzMDBtcywgY29sb3IgMzAwbXN9LnRvZ2dsZS1zd2l0Y2gtaWNvbntwb3NpdGlvbjphYnNvbHV0ZTtjb2xvcjp2YXIoLS1pb24tY29sb3ItZGFyaywgIzIyMjQyOCl9Omhvc3QoLnRvZ2dsZS1sdHIpIC50b2dnbGUtc3dpdGNoLWljb257cmlnaHQ6NnB4fTpob3N0KC50b2dnbGUtcnRsKSAudG9nZ2xlLXN3aXRjaC1pY29ue3JpZ2h0OmluaXRpYWw7bGVmdDo2cHg7fTpob3N0KC50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1zd2l0Y2gtaWNvbi50b2dnbGUtc3dpdGNoLWljb24tY2hlY2tlZHtjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QsICNmZmYpfTpob3N0KC50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1zd2l0Y2gtaWNvbjpub3QoLnRvZ2dsZS1zd2l0Y2gtaWNvbi1jaGVja2VkKXtvcGFjaXR5OjB9LnRvZ2dsZS1zd2l0Y2gtaWNvbi1jaGVja2Vke3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjE1cHg7aGVpZ2h0OjE1cHg7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoOTBkZWcpO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg5MGRlZyl9Omhvc3QoLnRvZ2dsZS1sdHIpIC50b2dnbGUtc3dpdGNoLWljb24tY2hlY2tlZHtyaWdodDppbml0aWFsO2xlZnQ6NHB4O306aG9zdCgudG9nZ2xlLXJ0bCkgLnRvZ2dsZS1zd2l0Y2gtaWNvbi1jaGVja2Vke3JpZ2h0OjRweH06aG9zdCgudG9nZ2xlLWFjdGl2YXRlZCkgLnRvZ2dsZS1pY29uOjpiZWZvcmUsOmhvc3QoLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWljb246OmJlZm9yZXstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKDAsIDAsIDApO3RyYW5zZm9ybTpzY2FsZTNkKDAsIDAsIDApfTpob3N0KC50b2dnbGUtYWN0aXZhdGVkLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWlubmVyOjpiZWZvcmV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUzZCgwLCAwLCAwKTt0cmFuc2Zvcm06c2NhbGUzZCgwLCAwLCAwKX06aG9zdCgudG9nZ2xlLWFjdGl2YXRlZCkgLnRvZ2dsZS1pbm5lcnt3aWR0aDpjYWxjKHZhcigtLWhhbmRsZS13aWR0aCkgKyA2cHgpfTpob3N0KC50b2dnbGUtbHRyLnRvZ2dsZS1hY3RpdmF0ZWQudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaWNvbi13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoMTAwJSAtIHZhcigtLWhhbmRsZS13aWR0aCkgLSA2cHgpLCAwLCAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYygxMDAlIC0gdmFyKC0taGFuZGxlLXdpZHRoKSAtIDZweCksIDAsIDApfTpob3N0KC50b2dnbGUtcnRsLnRvZ2dsZS1hY3RpdmF0ZWQudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaWNvbi13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoLTEwMCUgKyB2YXIoLS1oYW5kbGUtd2lkdGgpICsgNnB4KSwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoLTEwMCUgKyB2YXIoLS1oYW5kbGUtd2lkdGgpICsgNnB4KSwgMCwgMCl9Omhvc3QoLnRvZ2dsZS1kaXNhYmxlZCl7b3BhY2l0eTowLjN9XCI7XG5jb25zdCBJb25Ub2dnbGVJb3NTdHlsZTAgPSB0b2dnbGVJb3NDc3M7XG5jb25zdCB0b2dnbGVNZENzcyA9IFwiOmhvc3R7LXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94ICFpbXBvcnRhbnQ7Ym94LXNpemluZzpjb250ZW50LWJveCAhaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO21heC13aWR0aDoxMDAlO291dGxpbmU6bm9uZTtjdXJzb3I6cG9pbnRlcjstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7ei1pbmRleDoyfTpob3N0KC5pbi1pdGVtKXstbXMtZmxleDoxIDEgMHB4O2ZsZXg6MSAxIDA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX06aG9zdChbc2xvdD1zdGFydF0pLDpob3N0KFtzbG90PWVuZF0pey1tcy1mbGV4OmluaXRpYWw7ZmxleDppbml0aWFsO3dpZHRoOmF1dG99Omhvc3QoLmlvbi1mb2N1c2VkKSBpbnB1dHtib3JkZXI6MnB4IHNvbGlkICM1ZTllZDZ9Omhvc3QoLnRvZ2dsZS1kaXNhYmxlZCl7cG9pbnRlci1ldmVudHM6bm9uZX1pbnB1dHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7cmlnaHQ6MDtib3R0b206MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO21hcmdpbjowO3BhZGRpbmc6MDtib3JkZXI6MDtvdXRsaW5lOjA7Y2xpcDpyZWN0KDAgMCAwIDApO29wYWNpdHk6MDtvdmVyZmxvdzpoaWRkZW47LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmV9LnRvZ2dsZS13cmFwcGVye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47aGVpZ2h0OmluaGVyaXQ7LXdlYmtpdC10cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMTVtcyBsaW5lYXI7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIDE1bXMgbGluZWFyO2N1cnNvcjppbmhlcml0fS5sYWJlbC10ZXh0LXdyYXBwZXJ7dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVufTpob3N0KC5pbi1pdGVtKSAubGFiZWwtdGV4dC13cmFwcGVye21hcmdpbi10b3A6MTBweDttYXJnaW4tYm90dG9tOjEwcHh9Omhvc3QoLmluLWl0ZW0udG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkKSAubGFiZWwtdGV4dC13cmFwcGVye21hcmdpbi10b3A6MTBweDttYXJnaW4tYm90dG9tOjE2cHh9Omhvc3QoLmluLWl0ZW0udG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkKSAubmF0aXZlLXdyYXBwZXJ7bWFyZ2luLWJvdHRvbToxMHB4fS5sYWJlbC10ZXh0LXdyYXBwZXItaGlkZGVue2Rpc3BsYXk6bm9uZX0ubmF0aXZlLXdyYXBwZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0udG9nZ2xlLWJvdHRvbXtwYWRkaW5nLXRvcDo0cHg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2ZvbnQtc2l6ZTowLjc1cmVtO3doaXRlLXNwYWNlOm5vcm1hbH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkKSAudG9nZ2xlLWJvdHRvbXtmb250LXNpemU6MXJlbX0udG9nZ2xlLWJvdHRvbSAuZXJyb3ItdGV4dHtkaXNwbGF5Om5vbmU7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWRhbmdlciwgI2M1MDAwZil9LnRvZ2dsZS1ib3R0b20gLmhlbHBlci10ZXh0e2Rpc3BsYXk6YmxvY2s7Y29sb3I6dmFyKC0taW9uLWNvbG9yLXN0ZXAtNzAwLCB2YXIoLS1pb24tdGV4dC1jb2xvci1zdGVwLTMwMCwgIzRkNGQ0ZCkpfTpob3N0KC5pb24tdG91Y2hlZC5pb24taW52YWxpZCkgLnRvZ2dsZS1ib3R0b20gLmVycm9yLXRleHR7ZGlzcGxheTpibG9ja306aG9zdCguaW9uLXRvdWNoZWQuaW9uLWludmFsaWQpIC50b2dnbGUtYm90dG9tIC5oZWxwZXItdGV4dHtkaXNwbGF5Om5vbmV9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhcnQpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd306aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFydCkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LW1hcmdpbi1zdGFydDowO21hcmdpbi1pbmxpbmUtc3RhcnQ6MDstd2Via2l0LW1hcmdpbi1lbmQ6MTZweDttYXJnaW4taW5saW5lLWVuZDoxNnB4fTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LWVuZCkgLnRvZ2dsZS13cmFwcGVyey1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZTtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZTstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpzdGFydH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1lbmQpIC5sYWJlbC10ZXh0LXdyYXBwZXJ7LXdlYmtpdC1tYXJnaW4tc3RhcnQ6MTZweDttYXJnaW4taW5saW5lLXN0YXJ0OjE2cHg7LXdlYmtpdC1tYXJnaW4tZW5kOjA7bWFyZ2luLWlubGluZS1lbmQ6MH06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1maXhlZCkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LW1hcmdpbi1zdGFydDowO21hcmdpbi1pbmxpbmUtc3RhcnQ6MDstd2Via2l0LW1hcmdpbi1lbmQ6MTZweDttYXJnaW4taW5saW5lLWVuZDoxNnB4fTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LWZpeGVkKSAubGFiZWwtdGV4dC13cmFwcGVyey1tcy1mbGV4OjAgMCAxMDBweDtmbGV4OjAgMCAxMDBweDt3aWR0aDoxMDBweDttaW4td2lkdGg6MTAwcHg7bWF4LXdpZHRoOjIwMHB4fTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt0ZXh0LWFsaWduOmNlbnRlcn06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkKSAubGFiZWwtdGV4dC13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDAuNzUpO3RyYW5zZm9ybTpzY2FsZSgwLjc1KTttYXJnaW4tbGVmdDowO21hcmdpbi1yaWdodDowO21hcmdpbi1ib3R0b206MTZweDttYXgtd2lkdGg6Y2FsYygxMDAlIC8gMC43NSl9Omhvc3QoLnRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtc3RhY2tlZC50b2dnbGUtYWxpZ25tZW50LXN0YXJ0KSAubGFiZWwtdGV4dC13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpsZWZ0IHRvcDt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wfTpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKTpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQudG9nZ2xlLWFsaWdubWVudC1zdGFydCkgLmxhYmVsLXRleHQtd3JhcHBlciw6aG9zdC1jb250ZXh0KFtkaXI9cnRsXSkudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtc3RhcnQgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfUBzdXBwb3J0cyBzZWxlY3Rvcig6ZGlyKHJ0bCkpezpob3N0KC50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQudG9nZ2xlLWFsaWdubWVudC1zdGFydDpkaXIocnRsKSkgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wO3RyYW5zZm9ybS1vcmlnaW46cmlnaHQgdG9wfX06aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtY2VudGVyKSAubGFiZWwtdGV4dC13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXIgdG9wO3RyYW5zZm9ybS1vcmlnaW46Y2VudGVyIHRvcH06aG9zdC1jb250ZXh0KFtkaXI9cnRsXSk6aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtY2VudGVyKSAubGFiZWwtdGV4dC13cmFwcGVyLDpob3N0LWNvbnRleHQoW2Rpcj1ydGxdKS50b2dnbGUtbGFiZWwtcGxhY2VtZW50LXN0YWNrZWQudG9nZ2xlLWFsaWdubWVudC1jZW50ZXIgLmxhYmVsLXRleHQtd3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybS1vcmlnaW46Y2FsYygxMDAlIC0gY2VudGVyKSB0b3A7dHJhbnNmb3JtLW9yaWdpbjpjYWxjKDEwMCUgLSBjZW50ZXIpIHRvcH1Ac3VwcG9ydHMgc2VsZWN0b3IoOmRpcihydGwpKXs6aG9zdCgudG9nZ2xlLWxhYmVsLXBsYWNlbWVudC1zdGFja2VkLnRvZ2dsZS1hbGlnbm1lbnQtY2VudGVyOmRpcihydGwpKSAubGFiZWwtdGV4dC13cmFwcGVyey13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjpjYWxjKDEwMCUgLSBjZW50ZXIpIHRvcDt0cmFuc2Zvcm0tb3JpZ2luOmNhbGMoMTAwJSAtIGNlbnRlcikgdG9wfX06aG9zdCgudG9nZ2xlLWp1c3RpZnktc3BhY2UtYmV0d2VlbikgLnRvZ2dsZS13cmFwcGVyey1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn06aG9zdCgudG9nZ2xlLWp1c3RpZnktc3RhcnQpIC50b2dnbGUtd3JhcHBlcnstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpzdGFydH06aG9zdCgudG9nZ2xlLWp1c3RpZnktZW5kKSAudG9nZ2xlLXdyYXBwZXJ7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmVuZH06aG9zdCgudG9nZ2xlLWFsaWdubWVudC1zdGFydCkgLnRvZ2dsZS13cmFwcGVyey1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOnN0YXJ0fTpob3N0KC50b2dnbGUtYWxpZ25tZW50LWNlbnRlcikgLnRvZ2dsZS13cmFwcGVyey1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9Omhvc3QoLnRvZ2dsZS1qdXN0aWZ5LXNwYWNlLWJldHdlZW4pLDpob3N0KC50b2dnbGUtanVzdGlmeS1zdGFydCksOmhvc3QoLnRvZ2dsZS1qdXN0aWZ5LWVuZCksOmhvc3QoLnRvZ2dsZS1hbGlnbm1lbnQtc3RhcnQpLDpob3N0KC50b2dnbGUtYWxpZ25tZW50LWNlbnRlcil7ZGlzcGxheTpibG9ja30udG9nZ2xlLWljb24td3JhcHBlcntkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7LXdlYmtpdC10cmFuc2l0aW9uOnZhcigtLWhhbmRsZS10cmFuc2l0aW9uKTt0cmFuc2l0aW9uOnZhcigtLWhhbmRsZS10cmFuc2l0aW9uKTt3aWxsLWNoYW5nZTp0cmFuc2Zvcm19LnRvZ2dsZS1pY29ue2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQ6dmFyKC0tdHJhY2stYmFja2dyb3VuZCk7b3ZlcmZsb3c6aW5oZXJpdH06aG9zdCgudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaWNvbntiYWNrZ3JvdW5kOnZhcigtLXRyYWNrLWJhY2tncm91bmQtY2hlY2tlZCl9LnRvZ2dsZS1pbm5lcntib3JkZXItcmFkaXVzOnZhcigtLWhhbmRsZS1ib3JkZXItcmFkaXVzKTtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OnZhcigtLWhhbmRsZS1zcGFjaW5nKTt3aWR0aDp2YXIoLS1oYW5kbGUtd2lkdGgpO2hlaWdodDp2YXIoLS1oYW5kbGUtaGVpZ2h0KTttYXgtaGVpZ2h0OnZhcigtLWhhbmRsZS1tYXgtaGVpZ2h0KTstd2Via2l0LXRyYW5zaXRpb246dmFyKC0taGFuZGxlLXRyYW5zaXRpb24pO3RyYW5zaXRpb246dmFyKC0taGFuZGxlLXRyYW5zaXRpb24pO2JhY2tncm91bmQ6dmFyKC0taGFuZGxlLWJhY2tncm91bmQpOy13ZWJraXQtYm94LXNoYWRvdzp2YXIoLS1oYW5kbGUtYm94LXNoYWRvdyk7Ym94LXNoYWRvdzp2YXIoLS1oYW5kbGUtYm94LXNoYWRvdyk7Y29udGFpbjpzdHJpY3R9Omhvc3QoLnRvZ2dsZS1sdHIpIC50b2dnbGUtaW5uZXJ7bGVmdDp2YXIoLS1oYW5kbGUtc3BhY2luZyl9Omhvc3QoLnRvZ2dsZS1ydGwpIC50b2dnbGUtaW5uZXJ7cmlnaHQ6dmFyKC0taGFuZGxlLXNwYWNpbmcpfTpob3N0KC50b2dnbGUtbHRyLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWljb24td3JhcHBlcnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZChjYWxjKDEwMCUgLSB2YXIoLS1oYW5kbGUtd2lkdGgpKSwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGMoMTAwJSAtIHZhcigtLWhhbmRsZS13aWR0aCkpLCAwLCAwKX06aG9zdCgudG9nZ2xlLXJ0bC50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1pY29uLXdyYXBwZXJ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYygtMTAwJSArIHZhcigtLWhhbmRsZS13aWR0aCkpLCAwLCAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYygtMTAwJSArIHZhcigtLWhhbmRsZS13aWR0aCkpLCAwLCAwKX06aG9zdCgudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaW5uZXJ7YmFja2dyb3VuZDp2YXIoLS1oYW5kbGUtYmFja2dyb3VuZC1jaGVja2VkKX06aG9zdCgudG9nZ2xlLWx0ci50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1pbm5lcnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZChjYWxjKHZhcigtLWhhbmRsZS1zcGFjaW5nKSAqIC0yKSwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKGNhbGModmFyKC0taGFuZGxlLXNwYWNpbmcpICogLTIpLCAwLCAwKX06aG9zdCgudG9nZ2xlLXJ0bC50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1pbm5lcnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUzZChjYWxjKHZhcigtLWhhbmRsZS1zcGFjaW5nKSAqIDIpLCAwLCAwKTt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoY2FsYyh2YXIoLS1oYW5kbGUtc3BhY2luZykgKiAyKSwgMCwgMCl9Omhvc3R7LS10cmFjay1iYWNrZ3JvdW5kOnJnYmEodmFyKC0taW9uLXRleHQtY29sb3ItcmdiLCAwLCAwLCAwKSwgMC4zOSk7LS10cmFjay1iYWNrZ3JvdW5kLWNoZWNrZWQ6cmdiYSh2YXIoLS1pb24tY29sb3ItcHJpbWFyeS1yZ2IsIDAsIDg0LCAyMzMpLCAwLjUpOy0tYm9yZGVyLXJhZGl1czoxNHB4Oy0taGFuZGxlLWJhY2tncm91bmQ6I2ZmZmZmZjstLWhhbmRsZS1iYWNrZ3JvdW5kLWNoZWNrZWQ6dmFyKC0taW9uLWNvbG9yLXByaW1hcnksICMwMDU0ZTkpOy0taGFuZGxlLWJvcmRlci1yYWRpdXM6NTAlOy0taGFuZGxlLWJveC1zaGFkb3c6MCAzcHggMXB4IC0ycHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDJweCAycHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpOy0taGFuZGxlLXdpZHRoOjIwcHg7LS1oYW5kbGUtaGVpZ2h0OjIwcHg7LS1oYW5kbGUtbWF4LWhlaWdodDpjYWxjKDEwMCUgKyA2cHgpOy0taGFuZGxlLXNwYWNpbmc6MDstLWhhbmRsZS10cmFuc2l0aW9uOnRyYW5zZm9ybSAxNjBtcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpLCBiYWNrZ3JvdW5kLWNvbG9yIDE2MG1zIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSl9Lm5hdGl2ZS13cmFwcGVyIC50b2dnbGUtaWNvbnt3aWR0aDozNnB4O2hlaWdodDoxNHB4fTpob3N0KC5pb24tY29sb3IudG9nZ2xlLWNoZWNrZWQpIC50b2dnbGUtaWNvbntiYWNrZ3JvdW5kOnJnYmEodmFyKC0taW9uLWNvbG9yLWJhc2UtcmdiKSwgMC41KX06aG9zdCguaW9uLWNvbG9yLnRvZ2dsZS1jaGVja2VkKSAudG9nZ2xlLWlubmVye2JhY2tncm91bmQ6dmFyKC0taW9uLWNvbG9yLWJhc2UpfTpob3N0KC50b2dnbGUtY2hlY2tlZCkgLnRvZ2dsZS1pbm5lcntjb2xvcjp2YXIoLS1pb24tY29sb3ItY29udHJhc3QsICNmZmYpfS50b2dnbGUtaWNvbnstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAxNjBtczt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMTYwbXN9LnRvZ2dsZS1pbm5lcnt3aWxsLWNoYW5nZTpiYWNrZ3JvdW5kLWNvbG9yLCB0cmFuc2Zvcm07ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2NvbG9yOiMwMDB9LnRvZ2dsZS1pbm5lciAudG9nZ2xlLXN3aXRjaC1pY29uey13ZWJraXQtcGFkZGluZy1zdGFydDoxcHg7cGFkZGluZy1pbmxpbmUtc3RhcnQ6MXB4Oy13ZWJraXQtcGFkZGluZy1lbmQ6MXB4O3BhZGRpbmctaW5saW5lLWVuZDoxcHg7cGFkZGluZy10b3A6MXB4O3BhZGRpbmctYm90dG9tOjFweDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlfTpob3N0KC50b2dnbGUtZGlzYWJsZWQpe29wYWNpdHk6MC4zOH1cIjtcbmNvbnN0IElvblRvZ2dsZU1kU3R5bGUwID0gdG9nZ2xlTWRDc3M7XG5jb25zdCBUb2dnbGUgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKGhvc3RSZWYpIHtcbiAgICByZWdpc3Rlckluc3RhbmNlKHRoaXMsIGhvc3RSZWYpO1xuICAgIHRoaXMuaW9uQ2hhbmdlID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25DaGFuZ2VcIiwgNyk7XG4gICAgdGhpcy5pb25Gb2N1cyA9IGNyZWF0ZUV2ZW50KHRoaXMsIFwiaW9uRm9jdXNcIiwgNyk7XG4gICAgdGhpcy5pb25CbHVyID0gY3JlYXRlRXZlbnQodGhpcywgXCJpb25CbHVyXCIsIDcpO1xuICAgIHRoaXMuaW5wdXRJZCA9IGBpb24tdGctJHt0b2dnbGVJZHMrK31gO1xuICAgIHRoaXMuaGVscGVyVGV4dElkID0gYCR7dGhpcy5pbnB1dElkfS1oZWxwZXItdGV4dGA7XG4gICAgdGhpcy5lcnJvclRleHRJZCA9IGAke3RoaXMuaW5wdXRJZH0tZXJyb3ItdGV4dGA7XG4gICAgdGhpcy5sYXN0RHJhZyA9IDA7XG4gICAgdGhpcy5pbmhlcml0ZWRBdHRyaWJ1dGVzID0ge307XG4gICAgdGhpcy5kaWRMb2FkID0gZmFsc2U7XG4gICAgdGhpcy5zZXR1cEdlc3R1cmUgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHRvZ2dsZVRyYWNrXG4gICAgICB9ID0gdGhpcztcbiAgICAgIGlmICh0b2dnbGVUcmFjaykge1xuICAgICAgICB0aGlzLmdlc3R1cmUgPSAoYXdhaXQgaW1wb3J0KCcuL2luZGV4LTM5NzgyNjQyLmpzJykpLmNyZWF0ZUdlc3R1cmUoe1xuICAgICAgICAgIGVsOiB0b2dnbGVUcmFjayxcbiAgICAgICAgICBnZXN0dXJlTmFtZTogJ3RvZ2dsZScsXG4gICAgICAgICAgZ2VzdHVyZVByaW9yaXR5OiAxMDAsXG4gICAgICAgICAgdGhyZXNob2xkOiA1LFxuICAgICAgICAgIHBhc3NpdmU6IGZhbHNlLFxuICAgICAgICAgIG9uU3RhcnQ6ICgpID0+IHRoaXMub25TdGFydCgpLFxuICAgICAgICAgIG9uTW92ZTogZXYgPT4gdGhpcy5vbk1vdmUoZXYpLFxuICAgICAgICAgIG9uRW5kOiBldiA9PiB0aGlzLm9uRW5kKGV2KVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5kaXNhYmxlZENoYW5nZWQoKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHRoaXMub25DbGljayA9IGV2ID0+IHtcbiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBpZiAodGhpcy5sYXN0RHJhZyArIDMwMCA8IERhdGUubm93KCkpIHtcbiAgICAgICAgdGhpcy50b2dnbGVDaGVja2VkKCk7XG4gICAgICB9XG4gICAgfTtcbiAgICB0aGlzLm9uRm9jdXMgPSAoKSA9PiB7XG4gICAgICB0aGlzLmlvbkZvY3VzLmVtaXQoKTtcbiAgICB9O1xuICAgIHRoaXMub25CbHVyID0gKCkgPT4ge1xuICAgICAgdGhpcy5pb25CbHVyLmVtaXQoKTtcbiAgICB9O1xuICAgIHRoaXMuZ2V0U3dpdGNoTGFiZWxJY29uID0gKG1vZGUsIGNoZWNrZWQpID0+IHtcbiAgICAgIGlmIChtb2RlID09PSAnbWQnKSB7XG4gICAgICAgIHJldHVybiBjaGVja2VkID8gY2hlY2ttYXJrT3V0bGluZSA6IHJlbW92ZU91dGxpbmU7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2hlY2tlZCA/IHJlbW92ZU91dGxpbmUgOiBlbGxpcHNlT3V0bGluZTtcbiAgICB9O1xuICAgIHRoaXMuYWN0aXZhdGVkID0gZmFsc2U7XG4gICAgdGhpcy5jb2xvciA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLm5hbWUgPSB0aGlzLmlucHV0SWQ7XG4gICAgdGhpcy5jaGVja2VkID0gZmFsc2U7XG4gICAgdGhpcy5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuZXJyb3JUZXh0ID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuaGVscGVyVGV4dCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnZhbHVlID0gJ29uJztcbiAgICB0aGlzLmVuYWJsZU9uT2ZmTGFiZWxzID0gY29uZmlnLmdldCgndG9nZ2xlT25PZmZMYWJlbHMnKTtcbiAgICB0aGlzLmxhYmVsUGxhY2VtZW50ID0gJ3N0YXJ0JztcbiAgICB0aGlzLmp1c3RpZnkgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5hbGlnbm1lbnQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5yZXF1aXJlZCA9IGZhbHNlO1xuICB9XG4gIGRpc2FibGVkQ2hhbmdlZCgpIHtcbiAgICBpZiAodGhpcy5nZXN0dXJlKSB7XG4gICAgICB0aGlzLmdlc3R1cmUuZW5hYmxlKCF0aGlzLmRpc2FibGVkKTtcbiAgICB9XG4gIH1cbiAgdG9nZ2xlQ2hlY2tlZCgpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGVja2VkLFxuICAgICAgdmFsdWVcbiAgICB9ID0gdGhpcztcbiAgICBjb25zdCBpc05vd0NoZWNrZWQgPSAhY2hlY2tlZDtcbiAgICB0aGlzLmNoZWNrZWQgPSBpc05vd0NoZWNrZWQ7XG4gICAgdGhpcy5zZXRGb2N1cygpO1xuICAgIHRoaXMuaW9uQ2hhbmdlLmVtaXQoe1xuICAgICAgY2hlY2tlZDogaXNOb3dDaGVja2VkLFxuICAgICAgdmFsdWVcbiAgICB9KTtcbiAgfVxuICBhc3luYyBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAvKipcbiAgICAgKiBJZiB3ZSBoYXZlIG5vdCB5ZXQgcmVuZGVyZWRcbiAgICAgKiBpb24tdG9nZ2xlLCB0aGVuIHRvZ2dsZVRyYWNrIGlzIG5vdCBkZWZpbmVkLlxuICAgICAqIEJ1dCBpZiB3ZSBhcmUgbW92aW5nIGlvbi10b2dnbGUgdmlhIGFwcGVuZENoaWxkLFxuICAgICAqIHRoZW4gdG9nZ2xlVHJhY2sgd2lsbCBiZSBkZWZpbmVkLlxuICAgICAqL1xuICAgIGlmICh0aGlzLmRpZExvYWQpIHtcbiAgICAgIHRoaXMuc2V0dXBHZXN0dXJlKCk7XG4gICAgfVxuICB9XG4gIGNvbXBvbmVudERpZExvYWQoKSB7XG4gICAgdGhpcy5zZXR1cEdlc3R1cmUoKTtcbiAgICB0aGlzLmRpZExvYWQgPSB0cnVlO1xuICB9XG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLmdlc3R1cmUpIHtcbiAgICAgIHRoaXMuZ2VzdHVyZS5kZXN0cm95KCk7XG4gICAgICB0aGlzLmdlc3R1cmUgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIGNvbXBvbmVudFdpbGxMb2FkKCkge1xuICAgIHRoaXMuaW5oZXJpdGVkQXR0cmlidXRlcyA9IE9iamVjdC5hc3NpZ24oe30sIGluaGVyaXRBcmlhQXR0cmlidXRlcyh0aGlzLmVsKSk7XG4gIH1cbiAgb25TdGFydCgpIHtcbiAgICB0aGlzLmFjdGl2YXRlZCA9IHRydWU7XG4gICAgLy8gdG91Y2gtYWN0aW9uIGRvZXMgbm90IHdvcmsgaW4gaU9TXG4gICAgdGhpcy5zZXRGb2N1cygpO1xuICB9XG4gIG9uTW92ZShkZXRhaWwpIHtcbiAgICBpZiAoc2hvdWxkVG9nZ2xlKGlzUlRMKHRoaXMuZWwpLCB0aGlzLmNoZWNrZWQsIGRldGFpbC5kZWx0YVgsIC0xMCkpIHtcbiAgICAgIHRoaXMudG9nZ2xlQ2hlY2tlZCgpO1xuICAgICAgaGFwdGljU2VsZWN0aW9uKCk7XG4gICAgfVxuICB9XG4gIG9uRW5kKGV2KSB7XG4gICAgdGhpcy5hY3RpdmF0ZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhc3REcmFnID0gRGF0ZS5ub3coKTtcbiAgICBldi5ldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICB9XG4gIGdldFZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLnZhbHVlIHx8ICcnO1xuICB9XG4gIHNldEZvY3VzKCkge1xuICAgIGlmICh0aGlzLmZvY3VzRWwpIHtcbiAgICAgIHRoaXMuZm9jdXNFbC5mb2N1cygpO1xuICAgIH1cbiAgfVxuICByZW5kZXJPbk9mZlN3aXRjaExhYmVscyhtb2RlLCBjaGVja2VkKSB7XG4gICAgY29uc3QgaWNvbiA9IHRoaXMuZ2V0U3dpdGNoTGFiZWxJY29uKG1vZGUsIGNoZWNrZWQpO1xuICAgIHJldHVybiBoKFwiaW9uLWljb25cIiwge1xuICAgICAgY2xhc3M6IHtcbiAgICAgICAgJ3RvZ2dsZS1zd2l0Y2gtaWNvbic6IHRydWUsXG4gICAgICAgICd0b2dnbGUtc3dpdGNoLWljb24tY2hlY2tlZCc6IGNoZWNrZWRcbiAgICAgIH0sXG4gICAgICBpY29uOiBpY29uLFxuICAgICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIlxuICAgIH0pO1xuICB9XG4gIHJlbmRlclRvZ2dsZUNvbnRyb2woKSB7XG4gICAgY29uc3QgbW9kZSA9IGdldElvbk1vZGUodGhpcyk7XG4gICAgY29uc3Qge1xuICAgICAgZW5hYmxlT25PZmZMYWJlbHMsXG4gICAgICBjaGVja2VkXG4gICAgfSA9IHRoaXM7XG4gICAgcmV0dXJuIGgoXCJkaXZcIiwge1xuICAgICAgY2xhc3M6IFwidG9nZ2xlLWljb25cIixcbiAgICAgIHBhcnQ6IFwidHJhY2tcIixcbiAgICAgIHJlZjogZWwgPT4gdGhpcy50b2dnbGVUcmFjayA9IGVsXG4gICAgfSwgZW5hYmxlT25PZmZMYWJlbHMgJiYgbW9kZSA9PT0gJ2lvcycgJiYgW3RoaXMucmVuZGVyT25PZmZTd2l0Y2hMYWJlbHMobW9kZSwgdHJ1ZSksIHRoaXMucmVuZGVyT25PZmZTd2l0Y2hMYWJlbHMobW9kZSwgZmFsc2UpXSwgaChcImRpdlwiLCB7XG4gICAgICBjbGFzczogXCJ0b2dnbGUtaWNvbi13cmFwcGVyXCJcbiAgICB9LCBoKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzOiBcInRvZ2dsZS1pbm5lclwiLFxuICAgICAgcGFydDogXCJoYW5kbGVcIlxuICAgIH0sIGVuYWJsZU9uT2ZmTGFiZWxzICYmIG1vZGUgPT09ICdtZCcgJiYgdGhpcy5yZW5kZXJPbk9mZlN3aXRjaExhYmVscyhtb2RlLCBjaGVja2VkKSkpKTtcbiAgfVxuICBnZXQgaGFzTGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZWwudGV4dENvbnRlbnQgIT09ICcnO1xuICB9XG4gIGdldEhpbnRUZXh0SUQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgZWwsXG4gICAgICBoZWxwZXJUZXh0LFxuICAgICAgZXJyb3JUZXh0LFxuICAgICAgaGVscGVyVGV4dElkLFxuICAgICAgZXJyb3JUZXh0SWRcbiAgICB9ID0gdGhpcztcbiAgICBpZiAoZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdpb24tdG91Y2hlZCcpICYmIGVsLmNsYXNzTGlzdC5jb250YWlucygnaW9uLWludmFsaWQnKSAmJiBlcnJvclRleHQpIHtcbiAgICAgIHJldHVybiBlcnJvclRleHRJZDtcbiAgICB9XG4gICAgaWYgKGhlbHBlclRleHQpIHtcbiAgICAgIHJldHVybiBoZWxwZXJUZXh0SWQ7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgLyoqXG4gICAqIFJlc3BvbnNpYmxlIGZvciByZW5kZXJpbmcgaGVscGVyIHRleHQgYW5kIGVycm9yIHRleHQuXG4gICAqIFRoaXMgZWxlbWVudCBzaG91bGQgb25seSBiZSByZW5kZXJlZCBpZiBoaW50IHRleHQgaXMgc2V0LlxuICAgKi9cbiAgcmVuZGVySGludFRleHQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgaGVscGVyVGV4dCxcbiAgICAgIGVycm9yVGV4dCxcbiAgICAgIGhlbHBlclRleHRJZCxcbiAgICAgIGVycm9yVGV4dElkXG4gICAgfSA9IHRoaXM7XG4gICAgLyoqXG4gICAgICogdW5kZWZpbmVkIGFuZCBlbXB0eSBzdHJpbmcgdmFsdWVzIHNob3VsZFxuICAgICAqIGJlIHRyZWF0ZWQgYXMgbm90IGhhdmluZyBoZWxwZXIvZXJyb3IgdGV4dC5cbiAgICAgKi9cbiAgICBjb25zdCBoYXNIaW50VGV4dCA9ICEhaGVscGVyVGV4dCB8fCAhIWVycm9yVGV4dDtcbiAgICBpZiAoIWhhc0hpbnRUZXh0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiBoKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzOiBcInRvZ2dsZS1ib3R0b21cIlxuICAgIH0sIGgoXCJkaXZcIiwge1xuICAgICAgaWQ6IGhlbHBlclRleHRJZCxcbiAgICAgIGNsYXNzOiBcImhlbHBlci10ZXh0XCIsXG4gICAgICBwYXJ0OiBcInN1cHBvcnRpbmctdGV4dCBoZWxwZXItdGV4dFwiXG4gICAgfSwgaGVscGVyVGV4dCksIGgoXCJkaXZcIiwge1xuICAgICAgaWQ6IGVycm9yVGV4dElkLFxuICAgICAgY2xhc3M6IFwiZXJyb3ItdGV4dFwiLFxuICAgICAgcGFydDogXCJzdXBwb3J0aW5nLXRleHQgZXJyb3ItdGV4dFwiXG4gICAgfSwgZXJyb3JUZXh0KSk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGFjdGl2YXRlZCxcbiAgICAgIGNvbG9yLFxuICAgICAgY2hlY2tlZCxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgZWwsXG4gICAgICBqdXN0aWZ5LFxuICAgICAgbGFiZWxQbGFjZW1lbnQsXG4gICAgICBpbnB1dElkLFxuICAgICAgbmFtZSxcbiAgICAgIGFsaWdubWVudCxcbiAgICAgIHJlcXVpcmVkXG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3QgbW9kZSA9IGdldElvbk1vZGUodGhpcyk7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldFZhbHVlKCk7XG4gICAgY29uc3QgcnRsID0gaXNSVEwoZWwpID8gJ3J0bCcgOiAnbHRyJztcbiAgICByZW5kZXJIaWRkZW5JbnB1dCh0cnVlLCBlbCwgbmFtZSwgY2hlY2tlZCA/IHZhbHVlIDogJycsIGRpc2FibGVkKTtcbiAgICByZXR1cm4gaChIb3N0LCB7XG4gICAgICBrZXk6ICdjNmRiN2Y1YmMwYjM1ODk0NGMwZDc5ZTI0YWViNGQzMTk3OTM0MjJmJyxcbiAgICAgIFwiYXJpYS1kZXNjcmliZWRieVwiOiB0aGlzLmdldEhpbnRUZXh0SUQoKSxcbiAgICAgIFwiYXJpYS1pbnZhbGlkXCI6IHRoaXMuZ2V0SGludFRleHRJRCgpID09PSB0aGlzLmVycm9yVGV4dElkLFxuICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrLFxuICAgICAgY2xhc3M6IGNyZWF0ZUNvbG9yQ2xhc3Nlcyhjb2xvciwge1xuICAgICAgICBbbW9kZV06IHRydWUsXG4gICAgICAgICdpbi1pdGVtJzogaG9zdENvbnRleHQoJ2lvbi1pdGVtJywgZWwpLFxuICAgICAgICAndG9nZ2xlLWFjdGl2YXRlZCc6IGFjdGl2YXRlZCxcbiAgICAgICAgJ3RvZ2dsZS1jaGVja2VkJzogY2hlY2tlZCxcbiAgICAgICAgJ3RvZ2dsZS1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICAgICBbYHRvZ2dsZS1qdXN0aWZ5LSR7anVzdGlmeX1gXToganVzdGlmeSAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBbYHRvZ2dsZS1hbGlnbm1lbnQtJHthbGlnbm1lbnR9YF06IGFsaWdubWVudCAhPT0gdW5kZWZpbmVkLFxuICAgICAgICBbYHRvZ2dsZS1sYWJlbC1wbGFjZW1lbnQtJHtsYWJlbFBsYWNlbWVudH1gXTogdHJ1ZSxcbiAgICAgICAgW2B0b2dnbGUtJHtydGx9YF06IHRydWVcbiAgICAgIH0pXG4gICAgfSwgaChcImxhYmVsXCIsIHtcbiAgICAgIGtleTogJ2Y0OTUzMTM5MWY0NTEzZDA4NDA2MWMyN2ViYzRjNGViMWRjZDAyYWInLFxuICAgICAgY2xhc3M6IFwidG9nZ2xlLXdyYXBwZXJcIlxuICAgIH0sIGgoXCJpbnB1dFwiLCBPYmplY3QuYXNzaWduKHtcbiAgICAgIGtleTogJ2Y0YWIyZGMyOWVhZTA1M2Y1NDYxM2QxMzA0Zjc1NWUxNTEwMzdmNDcnLFxuICAgICAgdHlwZTogXCJjaGVja2JveFwiLFxuICAgICAgcm9sZTogXCJzd2l0Y2hcIixcbiAgICAgIFwiYXJpYS1jaGVja2VkXCI6IGAke2NoZWNrZWR9YCxcbiAgICAgIGNoZWNrZWQ6IGNoZWNrZWQsXG4gICAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgICBpZDogaW5wdXRJZCxcbiAgICAgIG9uRm9jdXM6ICgpID0+IHRoaXMub25Gb2N1cygpLFxuICAgICAgb25CbHVyOiAoKSA9PiB0aGlzLm9uQmx1cigpLFxuICAgICAgcmVmOiBmb2N1c0VsID0+IHRoaXMuZm9jdXNFbCA9IGZvY3VzRWwsXG4gICAgICByZXF1aXJlZDogcmVxdWlyZWRcbiAgICB9LCB0aGlzLmluaGVyaXRlZEF0dHJpYnV0ZXMpKSwgaChcImRpdlwiLCB7XG4gICAgICBrZXk6ICc4NTY3NGJmYWI1ZWMxZTQyMmM3ODdkMDI1YzRmOWY1YjNhYWRkNGYyJyxcbiAgICAgIGNsYXNzOiB7XG4gICAgICAgICdsYWJlbC10ZXh0LXdyYXBwZXInOiB0cnVlLFxuICAgICAgICAnbGFiZWwtdGV4dC13cmFwcGVyLWhpZGRlbic6ICF0aGlzLmhhc0xhYmVsXG4gICAgICB9LFxuICAgICAgcGFydDogXCJsYWJlbFwiXG4gICAgfSwgaChcInNsb3RcIiwge1xuICAgICAga2V5OiAnOWJkZjdlODVjOTVkYzczNzNmMTg4OTRlYmZlNmFkMDIyZjA5ODEwNydcbiAgICB9KSwgdGhpcy5yZW5kZXJIaW50VGV4dCgpKSwgaChcImRpdlwiLCB7XG4gICAgICBrZXk6ICczMzg4MzY0MmIzODQyMWE4MjAwMWUzN2RiM2RkNWU1YzY0Mzc4NWIwJyxcbiAgICAgIGNsYXNzOiBcIm5hdGl2ZS13cmFwcGVyXCJcbiAgICB9LCB0aGlzLnJlbmRlclRvZ2dsZUNvbnRyb2woKSkpKTtcbiAgfVxuICBnZXQgZWwoKSB7XG4gICAgcmV0dXJuIGdldEVsZW1lbnQodGhpcyk7XG4gIH1cbiAgc3RhdGljIGdldCB3YXRjaGVycygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgXCJkaXNhYmxlZFwiOiBbXCJkaXNhYmxlZENoYW5nZWRcIl1cbiAgICB9O1xuICB9XG59O1xuY29uc3Qgc2hvdWxkVG9nZ2xlID0gKHJ0bCwgY2hlY2tlZCwgZGVsdGFYLCBtYXJnaW4pID0+IHtcbiAgaWYgKGNoZWNrZWQpIHtcbiAgICByZXR1cm4gIXJ0bCAmJiBtYXJnaW4gPiBkZWx0YVggfHwgcnRsICYmIC1tYXJnaW4gPCBkZWx0YVg7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICFydGwgJiYgLW1hcmdpbiA8IGRlbHRhWCB8fCBydGwgJiYgbWFyZ2luID4gZGVsdGFYO1xuICB9XG59O1xubGV0IHRvZ2dsZUlkcyA9IDA7XG5Ub2dnbGUuc3R5bGUgPSB7XG4gIGlvczogSW9uVG9nZ2xlSW9zU3R5bGUwLFxuICBtZDogSW9uVG9nZ2xlTWRTdHlsZTBcbn07XG5leHBvcnQgeyBUb2dnbGUgYXMgaW9uX3RvZ2dsZSB9OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVlBLElBQU0sZUFBZTtBQUNyQixJQUFNLHFCQUFxQjtBQUMzQixJQUFNLGNBQWM7QUFDcEIsSUFBTSxvQkFBb0I7QUFDMUIsSUFBTSxTQUFTLE1BQU07QUFBQSxFQUNuQixZQUFZLFNBQVM7QUFDbkIscUJBQWlCLE1BQU0sT0FBTztBQUM5QixTQUFLLFlBQVksWUFBWSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxTQUFLLFdBQVcsWUFBWSxNQUFNLFlBQVksQ0FBQztBQUMvQyxTQUFLLFVBQVUsWUFBWSxNQUFNLFdBQVcsQ0FBQztBQUM3QyxTQUFLLFVBQVUsVUFBVSxXQUFXO0FBQ3BDLFNBQUssZUFBZSxHQUFHLEtBQUssT0FBTztBQUNuQyxTQUFLLGNBQWMsR0FBRyxLQUFLLE9BQU87QUFDbEMsU0FBSyxXQUFXO0FBQ2hCLFNBQUssc0JBQXNCLENBQUM7QUFDNUIsU0FBSyxVQUFVO0FBQ2YsU0FBSyxlQUFlLE1BQVk7QUFDOUIsWUFBTTtBQUFBLFFBQ0o7QUFBQSxNQUNGLElBQUk7QUFDSixVQUFJLGFBQWE7QUFDZixhQUFLLFdBQVcsTUFBTSxPQUFPLDhCQUFxQixHQUFHLGNBQWM7QUFBQSxVQUNqRSxJQUFJO0FBQUEsVUFDSixhQUFhO0FBQUEsVUFDYixpQkFBaUI7QUFBQSxVQUNqQixXQUFXO0FBQUEsVUFDWCxTQUFTO0FBQUEsVUFDVCxTQUFTLE1BQU0sS0FBSyxRQUFRO0FBQUEsVUFDNUIsUUFBUSxRQUFNLEtBQUssT0FBTyxFQUFFO0FBQUEsVUFDNUIsT0FBTyxRQUFNLEtBQUssTUFBTSxFQUFFO0FBQUEsUUFDNUIsQ0FBQztBQUNELGFBQUssZ0JBQWdCO0FBQUEsTUFDdkI7QUFB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RyxjQUFjO0FBQUEsUUFDakQsQ0FBQywwQkFBMEIsY0FBYyxFQUFFLEdBQUc7QUFBQSxRQUM5QyxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUc7QUFBQSxNQUNyQixDQUFDO0FBQUEsSUFDSCxHQUFHLEVBQUUsU0FBUztBQUFBLE1BQ1osS0FBSztBQUFBLE1BQ0wsT0FBTztBQUFBLElBQ1QsR0FBRyxFQUFFLFNBQVMsT0FBTyxPQUFPO0FBQUEsTUFDMUIsS0FBSztBQUFBLE1BQ0wsTUFBTTtBQUFBLE1BQ04sTUFBTTtBQUFBLE1BQ04sZ0JBQWdCLEdBQUcsT0FBTztBQUFBLE1BQzFCO0FBQUEsTUFDQTtBQUFBLE1BQ0EsSUFBSTtBQUFBLE1BQ0osU0FBUyxNQUFNLEtBQUssUUFBUTtBQUFBLE1BQzVCLFFBQVEsTUFBTSxLQUFLLE9BQU87QUFBQSxNQUMxQixLQUFLLGFBQVcsS0FBSyxVQUFVO0FBQUEsTUFDL0I7QUFBQSxJQUNGLEdBQUcsS0FBSyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsT0FBTztBQUFBLE1BQ3RDLEtBQUs7QUFBQSxNQUNMLE9BQU87QUFBQSxRQUNMLHNCQUFzQjtBQUFBLFFBQ3RCLDZCQUE2QixDQUFDLEtBQUs7QUFBQSxNQUNyQztBQUFBLE1BQ0EsTUFBTTtBQUFBLElBQ1IsR0FBRyxFQUFFLFFBQVE7QUFBQSxNQUNYLEtBQUs7QUFBQSxJQUNQLENBQUMsR0FBRyxLQUFLLGVBQWUsQ0FBQyxHQUFHLEVBQUUsT0FBTztBQUFBLE1BQ25DLEtBQUs7QUFBQSxNQUNMLE9BQU87QUFBQSxJQUNULEdBQUcsS0FBSyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7QUFBQSxFQUNqQztBQUFBLEVBQ0EsSUFBSSxLQUFLO0FBQ1AsV0FBTyxXQUFXLElBQUk7QUFBQSxFQUN4QjtBQUFBLEVBQ0EsV0FBVyxXQUFXO0FBQ3BCLFdBQU87QUFBQSxNQUNMLFlBQVksQ0FBQyxpQkFBaUI7QUFBQSxJQUNoQztBQUFBLEVBQ0Y7QUFDRjtBQUNBLElBQU0sZUFBZSxDQUFDLEtBQUssU0FBUyxRQUFRLFdBQVc7QUFDckQsTUFBSSxTQUFTO0FBQ1gsV0FBTyxDQUFDLE9BQU8sU0FBUyxVQUFVLE9BQU8sQ0FBQyxTQUFTO0FBQUEsRUFDckQsT0FBTztBQUNMLFdBQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxVQUFVLE9BQU8sU0FBUztBQUFBLEVBQ3JEO0FBQ0Y7QUFDQSxJQUFJLFlBQVk7QUFDaEIsT0FBTyxRQUFRO0FBQUEsRUFDYixLQUFLO0FBQUEsRUFDTCxJQUFJO0FBQ047IiwibmFtZXMiOltdLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMF19
